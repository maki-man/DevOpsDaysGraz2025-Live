name: Release Pipeline

on:
  push: {}
  workflow_dispatch:
    inputs:
      version:
        description: Name or version
        required: true
        type: string

permissions:
  contents: write

jobs:
  release-pipeline:
   name: Release Pipeline
   runs-on: windows-latest
   env:
     CERT_NAME: cert.pfx

   steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Dotnet tools
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Run Core.Test
        run: dotnet test .\src\DevOpsDaysTasks.Core.Tests

      - name: Run IntegrationTests
        run: dotnet test .\src\DevOpsDaysTasks.IntegrationTests

      # Problem: Hardcoded Release version
      - name: Publish Build
        env:
          VERSION: ${{ inputs.version || '0.0.0' }}
        run: dotnet publish -c Release src\DevOpsDaysTasks.UI\ -o DevOpsDaysTasks /p:Version=${{ env.VERSION }} /p:VersionName=Bobcat

        # Problem: We don't want to use the workshop folder
      - name: Copy Template
        run: |
            mkdir -p DevOpsDaysTasks/Templates
            mkdir -p DevOpsDaysTasks/Help
            cp workshop_material/default-tasks.xml DevOpsDaysTasks/Templates
            cp workshop_material/Help.pdf DevOpsDaysTasks/Help
      
      # Problem: Cert and Password
      - name: Create Cert
        run: |
          $base64 = "${{ secrets.SIGN_CERTIFICATE_PFX_BASE64 }}"
          $content = [System.Convert]::FromBase64String($base64)
          Set-Content ${{ env.CERT_NAME }} -Value $content -AsByteStream

      - name: Sign Release
        run: .\scripts\sign.ps1 .\DevOpsDaysTasks\DevOpsDaysTasks.UI.exe -PfxFile ${{ env.CERT_NAME }} -PfxPassword Password
 
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
            path: DevOpsDaysTasks
            name: DevOpsDaysTasks

      - name: Create ZIP
        if: ${{ inputs.version }}
        run: Compress-Archive -Path 'DevOpsDaysTasks' -DestinationPath 'DevOpsDaysTasks.zip'

      - name: Create a GitHub Release
        uses: softprops/action-gh-release@v1
        if: ${{ inputs.version }}
        with:
          name: v${{ inputs.version }}
          tag_name: ${{ inputs.version }}
          files: DevOpsDaysTasks.zip